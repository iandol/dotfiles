background_opacity 0.85
#: The opacity of the background. A number between zero and one

background_blur 30
#: Set to a positive value to enable background blur

background_image ~/.config/kitty/colors-dark.png
#: Path to a background image. Must be in PNG format.

background_image_layout cscaled
#: Whether to tile, scale or clamp the background image. The value can
#: be one of tiled, mirror-tiled, scaled, clamped, centered or
#: cscaled. The scaled and cscaled values scale the image to the
#: window size, with cscaled preserving the image aspect ratio.

dynamic_background_opacity yes
#: Allow changing of the background_opacity dynamically

background_tint 0.1
#: How much to tint the background image by the background color. This
#: option makes it easier to read the text. Tinting is done using the
#: current background color for each window.

inactive_text_alpha 0.5
#: Fade the text in inactive windows by the specified amount (a number
#: between zero and one, with zero being fully faded).

hide_window_decorations titlebar-only
#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only and titlebar-and-corners can be used
#: to only hide the titlebar and the rounded corners. Whether this
#: works and exactly what effect it has depends on the window
#: manager/operating system. Note that the effects of changing this
#: option when reloading config are undefined. When using titlebar-
#: only, it is useful to also set window_margin_width and
#: placement_strategy to prevent the rounded corners from clipping
#: text. Or use titlebar-and-corners.

tab_bar_edge top
#: The edge to show the tab bar on, top or bottom.

tab_bar_margin_width 0.0
#: The margin to the left and right of the tab bar (in pts).

tab_bar_margin_height 0.0 0.0
#: The margin above and below the tab bar (in pts). The first number
#: is the margin between the edge of the OS Window and the tab bar.
#: The second number is the margin between the tab bar and the
#: contents of the current tab.

tab_bar_style powerline
#: The tab bar style, can be one of: fade slant separator powerline custom hidden

tab_powerline_style round
#: The powerline separator style between tabs in the tab bar when
#: using powerline as the tab_bar_style, can be one of: angled,
#: slanted, round.

shell /usr/local/bin/elvish
#: The shell program to execute. The default value of . means to use
#: whatever shell is set as the default shell for the current user.
#: Note that on macOS if you change this, you might need to add
#: --login and --interactive to ensure that the shell starts in

scrollback_lines 5000
#: Number of lines of history to keep in memory for scrolling back.
#: Memory is allocated on demand. Negative numbers are (effectively)
#: infinite scrollback. Note that using very large scrollback is not
#: recommended as it can slow down performance of the terminal and

disable_ligatures cursor
#: Choose how you want to handle multi-character ligatures. The
#: default is to always render them. You can tell kitty to not render
#: them when the cursor is over them by using cursor to make editing
#: easier, or have kitty never render them at all by using always, if

cursor_shape beam
#: The cursor shape can be one of block, beam, underline. 

cursor_blink_interval 0.3
#: The interval to blink the cursor (in seconds). Set to zero to
#: disable blinking. 

cursor_trail 500
cursor_trail_start_threshold 15
#: cursor trails

remember_window_size  yes
remember_window_position yes
initial_window_width  90c
initial_window_height 65c
#: If enabled, the OS Window size will be remembered so that new
#: instances of kitty will have the same size as the previous
#: instance. If disabled, the OS Window will initially have size
#: configured by initial_window_width/height, in pixels. You can use a
#: suffix of "c" on the width/height values to have them interpreted
#: as number of cells instead of pixels.

single_window_margin_width 0
window_margin_width 2
single_window_padding_width 0
window_padding_width 2
#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.

#: Keyboard shortcuts {{{

#: Keys are identified simply by their lowercase Unicode characters.
#: For example: a for the A key, [ for the left square bracket key,
#: etc. For functional keys, such as Enter or Escape, the names are
#: present at Functional key definitions
#: <https://sw.kovidgoyal.net/kitty/keyboard-protocol/#functional>.
#: For modifier keys, the names are ctrl (control, ⌃), shift (⇧), alt
#: (opt, option, ⌥), super (cmd, command, ⌘).

#: Simple shortcut mapping is done with the map directive. For full
#: details on advanced mapping including modal and per application
#: maps, see mapping <https://sw.kovidgoyal.net/kitty/mapping/>. Some
#: quick examples to illustrate common tasks::

#:     # unmap a keyboard shortcut, passing it to the program running in kitty
#:     map kitty_mod+space
#:     # completely ignore a keyboard event
#:     map ctrl+alt+f1 discard_event
#:     # combine multiple actions
#:     map kitty_mod+e combine : new_window : next_layout
#:     # multi-key shortcuts
#:     map ctrl+x>ctrl+y>z action

#: The full list of actions that can be mapped to key presses is
#: available here <https://sw.kovidgoyal.net/kitty/actions/>.

# kitty_mod ctrl+shift

#: Special modifier key alias for default shortcuts. You can change
#: the value of this option to alter all default shortcuts that use
#: kitty_mod.

# clear_all_shortcuts no

#: Remove all shortcut definitions up to this point. Useful, for
#: instance, to remove the default shortcuts.

action_alias launch_tab launch --type=tab --cwd=current --copy-env --env PATH="$HOME/.pixi/bin:/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin:/snap/bin:$PATH"
map shift+f1 launch_tab tmux
map shift+f2 launch_tab zsh
map shift+f3 launch_tab bash
map shift+f4 launch_tab nvim
map shift+f5 launch_tab elvish -norc
map kitty_mod+z toggle_layout stack
map kitty_mod+f toggle_fullscreen
map ctrl+shift+k kitten kitty-keymap.py

# kitty+nvim scrollback buffer
allow_remote_control yes

# OS-specific options
include kitty${KITTY_OS}.conf

# BEGIN_KITTY_THEME
# Catppuccin-Mocha
include current-theme.conf
# END_KITTY_THEME

# BEGIN_KITTY_FONTS
font_family      family="Rec Mono Casual"
bold_font        auto
italic_font      auto
bold_italic_font auto
# END_KITTY_FONTS

#!/usr/bin/osascript

(*
Script written by Naupaka Zimmerman
March 17, 2017

MIT License

Copyright (c) 2017 Naupaka Zimmerman

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

##########################################
##########################################

This is an applescript to export a set of groups (static or smart) from Bookends to 
bibtex files. The idea is that it could be incorportated into a makefile for building a 
manuscript, for example.  It is meant to be run from the command line, with 
arguments. Bookends needs to be open to the library you want to export from.

Usage:
osascript bookends_to_bibtex.scpt "Text pattern of groups to export" "Path to export .bib files to"

If you want to export all groups in a folder, be sure to use a trailing slash, e.g.:
osascript bookends_to_bibtex.scpt "Manuscripts/" "/Users/steve/Desktop/"

You can also add a debug option to see what groups should be being exported:
osascript bookends_to_bibtex.scpt "Manuscripts/" "/Users/steve/Desktop/" DEBUG

Defaults (if called with no parameters):
osascript bookends_to_bibtex.scpt "Manuscripts/" "Path to script file"
*)

(*
Function to split returned values on a character into an array
and also to parse out only those that match the query string.
E.g. if you have a folder of groups called "Manuscripts/", this will
find all groups with that word in their path and export them.
It will also work with the name of just a single specific group.
Based on code from this page: 
http://erikslab.com/2007/08/31/applescript-how-to-split-a-string/
*)
on theSplit(theString, theDelimiter, theExportText)
	-- save delimiters to restore old settings
	set oldDelimiters to AppleScript's text item delimiters
	
	-- set delimiters to delimiter to be used
	set AppleScript's text item delimiters to theDelimiter
	
	-- create the array
	set theGroupArray to every text item of theString
	
	-- restore the old setting
	set AppleScript's text item delimiters to oldDelimiters
	
	-- return the result
	set theSelectedList to {}
	repeat with myGroup in theGroupArray
		if ((myGroup as string) contains theExportText) then
			
			-- use sed to strip out all folder names from the group name returned from bookends
			-- this leaves only group name 
			set thecommandstring to "echo \"" & myGroup & "\"| sed \"s/.*\\/\\(.*\\)/\\1/\"" as string
			set sedResult to do shell script thecommandstring
			
			-- if there's a match, append parsed group name onto end of list
			set end of theSelectedList to sedResult
		end if
	end repeat
	return theSelectedList
end theSplit


on run argv
	
	-- default: no DEBUG output
	set DEBUG to false
	
	-- crude check for existance of command line arguments
	if argv contains "DEBUG" then
		set DEBUG to true
	end if
	
	if (count of argv) > 1 then
		-- this is if there are both groups and path
		set myGroupsToExport to item 1 of argv
		set myPath to item 2 of argv
		
	else if ((count of argv) > 0 and (count of argv) < 2) then
		-- this is if there is only one argument, the groups to match
		set myGroupsToExport to item 1 of argv
		
		-- Export to folder script is in as default if nothing specified
		------------------------------------------------------------------
		-- http://stackoverflow.com/questions/24152552/relative-file-paths-with-applescript
		-- from: https://superuser.com/questions/670893/get-path-of-parent-folder-of-script-location-applescript/670898#670898
		tell application "Finder"
			set myPath to POSIX path of (container of (path to me) as text)
		end tell
		
	else
		-- this is if there are neither	
		-- this does all groups in a Manuscripts folder if nothing else is specified
		set myGroupsToExport to "Manuscripts/"
		
		-- Export to folder script is in by default if nothing specified
		------------------------------------------------------------------
		-- http://stackoverflow.com/questions/24152552/relative-file-paths-with-applescript
		-- from: https://superuser.com/questions/670893/get-path-of-parent-folder-of-script-location-applescript/670898#670898
		tell application "Finder"
			set myPath to POSIX path of (container of (path to me) as text)
		end tell
	end if
	
	tell application "Bookends"
		-- get a list of all groups in open library
		set allGroups to «event ToySRGPN» given «class PATH»:"true"
		
		-- split up those groups into elements of an array
		-- 'return' here, as the middle parameter, is the return or newline character
		set myGroupArray to my theSplit(allGroups, return, myGroupsToExport)
	end tell
	
	if DEBUG then
		-- set output string based on parsed input parameters or defaults
		set AppleScript's text item delimiters to ", "
		set output to ("Pattern for groups to export: " & myGroupsToExport & "
" & "Path to export to: " & myPath & "
" & "Groups exported: " & myGroupArray as string)
		set AppleScript's text item delimiters to "" -- change back to default
	end if
	
	-- loop over each folder matching the pattern and export each to a bibtex file
	repeat with myGroup in myGroupArray
		-- from: http://stackoverflow.com/questions/3780985/how-do-i-write-to-a-text-file-using-applescript
		set myFile to open for access (myPath & (myGroup as string)) & ".bib" with write permission
		
		try
			tell application "Bookends"
				-- get a list of all unique reference IDs in the specified group 
				set myListString to «event ToySRUID» myGroup as string
				-- convert to list 
				set oldDelim to AppleScript's text item delimiters
				set AppleScript's text item delimiters to return
				set myList to text items of myListString
				set AppleScript's text item delimiters to oldDelim
				
				-- iterate through list writing each entry
				repeat with a from 1 to length of myList
					set theCurrentListItem to item a of myList
					-- get the full formatted bibtex entry for each of those references
					set myBibTex to «event ToySGUID» theCurrentListItem given «class RRTF»:"false", string:"bibtex"
					-- write out as UTF-8
					-- from: http://macscripter.net/viewtopic.php?id=24534
					write myBibTex to myFile as «class utf8»
				end repeat
				
			end tell
			
		on error
			try
				close access myFile
				set AppleScript's text item delimiters to oldDelimiters
			end try
			return false
		end try
		
		close access myFile
		
		-- use tr to replace mac line endings with unix line endings
		set fixLineEndings to ("cat \"" & (myGroup as string) & ".bib\"" & " | tr \"
\" \"
\" > temp.bib; mv temp.bib \"" & (myGroup as string) & ".bib\"" as string)
		
		if DEBUG then
			return fixLineEndings
		else
			do shell script fixLineEndings
		end if
		
	end repeat
	
	if DEBUG then
		return output
	end if
end run
